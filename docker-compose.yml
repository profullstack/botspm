version: '3.8'

services:
  api-server:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: bots-pm-api
    volumes:
      # Mount the config file so it can be modified without rebuilding
      - ./config.json:/app/config.json
      # Mount the database file for persistence
      - ./data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
    environment:
      # Environment variables can be set here
      - NODE_ENV=production
      - LOG_LEVEL=info
      - API_PORT=3000
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - bots-network

  bot-master:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bots-pm-master
    volumes:
      # Mount the config file so it can be modified without rebuilding
      - ./config.json:/app/config.json
      # Mount the database file for persistence
      - ./data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
    environment:
      # Environment variables can be set here
      - NODE_ENV=production
      - LOG_LEVEL=info
      - API_URL=http://api-server:3000/api
      # Uncomment and set your 2CAPTCHA API key if needed
      # - TWO_CAPTCHA_API_KEY=your_api_key_here
    restart: unless-stopped
    # Enable interactive mode for the CLI
    stdin_open: true
    tty: true
    depends_on:
      - api-server
    networks:
      - bots-network

  web-app:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: bots-pm-web
    volumes:
      # Mount the config file so it can be modified without rebuilding
      - ./config.json:/app/config.json
    environment:
      - NODE_ENV=production
      - API_URL=http://api-server:3000/api
    ports:
      - "8080:80"
    restart: unless-stopped
    depends_on:
      - api-server
    networks:
      - bots-network

volumes:
  # Define a named volume for persistent data
  data:
    driver: local

networks:
  bots-network:
    driver: bridge